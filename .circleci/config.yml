version: 2
jobs:
  build:
    docker:
      - image: direqteng/gcpbuildenv
      - image: selenium/standalone-chrome:3.11.0
        environment:
          # Add app engine sdk to pythonpath for local unit tests.
          GCP_SDK_PATH: /usr/lib/google-cloud-sdk
          PYTHONPATH: /usr/lib/google-cloud-sdk/platform/google_appengine
          GCLOUD_PROJECT: "bill-deploytest"
    steps:
      - checkout
      - run:
          name: SetEnvVars
          command: |
            # echo $CLIENT_SECRET | base64 --decode -i > ${HOME}/client-secret.json
            echo $PYTHONPATH
            echo $GLOBAL_SECRET | base64 --decode -i > ${HOME}/client-secret.json
            sed  s/YOUR-API-KEY/$API_KEY/ api_key.py.sample > api_key.py
      - run:
          name: PythonEnv
          command: |
            mkdir -p lib
            pip install -r requirements.txt -t lib
            # authenticate and configure gcloud project
            gcloud auth activate-service-account --key-file ${HOME}/client-secret.json
            gcloud config set project $GCLOUD_PROJECT
      - run:
          name: LocalTest
          command: |
            # run local unit tests
            # python test_main.py
      - run:
          name: Install protractor
          command: |
            java -version
            npm install -g protractor
            webdriver-manager update
      - deploy:
          name: Deploy Master to GCP
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              # deploy to AppEngine
              gcloud -q app deploy app.yaml --no-promote --version=${CIRCLE_BUILD_NUM}
              # Run our E2E Test against the latest version
              # python e2e_test.py ${CIRCLE_BUILD_NUM}
              protractor protractor.conf.production.js
              # Sanity test latest production version
              curl https://${CIRCLE_BUILD_NUM}-dot-tracfone-agent.appspot.com/ping
              # If OK, promote latest version
              gcloud -q app services set-traffic --splits ${CIRCLE_BUILD_NUM}=1
              echo 'export NEW_VER_DEPLOYED=true' >> $BASH_ENV
              # Remove old versions
              bash .circleci/prune-gcp-versions.sh bill-deploytest 8
            fi
      - run:
          name: Cleanup on Error
          when: on_fail
          command: |
            echo "$NEW_VER_DEPLOYED"
            if [ "${CIRCLE_BRANCH}" == "master" ] && [ "$NEW_VER_DEPLOYED" != "true" ]; then
              # Make sure this version is deleted if there's an error
              gcloud -q app versions delete ${CIRCLE_BUILD_NUM}
            fi


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          context: org-global